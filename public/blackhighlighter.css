/*
 blackhighlighter.css - CSS particular to the read/write/verify widgets.
 Copyright (C) 2009 HostileFork.com

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU Affero General Public License as
 published by the Free Software Foundation, either version 3 of the
 License, or (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU Affero General Public License for more details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.

   See http://hostilefork.com/blackhighlighter for documentation.
*/


/* 
	Note: only valid color names are:
		aqua, black, blue, fuchsia, gray, green, lime, maroon, navy, 
		olive, purple, red, silver, teal, white, and yellow.
	See http://www.w3schools.com/css/css_colornames.asp for hex codes 
*/


body {
	/*
	 * I dunno what "the answer" is but if you fill the whole width
	 * it looks ugly.
	 *
	 * https://jdm-digital.com/2012/11/why-max-width-960/
	 */
	min-width: 720px;
	max-width: 960px;

	/* http://cssfontstack.com/ */
	font-family: "Proxima Nova Regular","Helvetica Neue",Calibri,"Droid Sans",Helvetica,Arial,sans-serif;
	font-size: 16px;

	margin: 0 auto;
	padding-top: 16px;

	background-color: #888;
}


/* Pad the tabs a bit more than they are by default */
.ui-tabs .ui-tabs-nav li a {
	padding: .5em 1.5em;
}


/*
 * Create some headroom in the area behind the tabs so that we can put
 * the logo in; flush with the right and top (there's a gap in the image).
 * It's technically possible in some browsers to offset it, but not all.
 */
.ui-tabs .ui-tabs-nav {
	padding-top: 110px !important;
	background-image: url(blackhighlighter-header-logo.png);
	background-position: top right;
	background-repeat: no-repeat;
}


/*
 * Unfortunately textareas have a problem with having padding and margin
 * directly applied to them.
 * 
 * http://stackoverflow.com/questions/271067/
 */
div.textarea-wrapper {
    margin: 16px;
}
.certificate-display, .document-display {
    padding: 16px;
    border: none;

    /* http://stackoverflow.com/a/22367546/211160 */
    overflow: hidden;

  /*  margin: ...; */ /* see above... */

   	width: 100%;
   	resize: none;
    -webkit-box-sizing: border-box;
       -moz-box-sizing: border-box;
            box-sizing: border-box;
}
.document-display {
	position: relative;
	color: black;
    background-color: white;
    min-height: 200px;

	/* I don't know if I like this or not, but it's something to think on */
	/* border: double 6px #333; */
}

/*
 * Currently need this specificity to override what jQuery UI does to
 * any textarea that lives underneath a tab!
 */
div.textarea-wrapper .certificate-display {
	background-color: rgb(255, 255, 170);
	color: rgb(0,0,0);
	height: auto;
	font-family: "Andale Mono", AndaleMono, monospace;
	font-size: 14px;
}

/* Classes specific to write.html */

.protection-area {
	cursor: crosshair;
}
/* http://css-tricks.com/overriding-the-default-text-selection-color-with-css/ */
/*
 * Text nodes in the protection area itself are intentionally not marked with
 * the black highlighter selection style.  This is because of the poor handling
 * of custom selection colors in webkit for such nodes.  The protection area
 * must clean up *any* direct children and convert them into divs before
 * running the protect process!  So don't add .protection-area::selection here
 * to try and solve a problem; fix the canonization before the protect instead.
 */
.protection-area *::selection { /* Safari, Chrome, etc... */
	color: #000000 !important;
	background: #000000 !important; 
}
.protection-area *::-moz-selection {
	color: #000000 !important;
	background: #000000 !important; /* Firefox */
}

/* must use span.protected as simply using .protected does not seem to work in Firefox */

span.protected {
}
span.protected:hover {
}
/* when we are in read+write mode w.r.t. editing protections, e.g. compose tab */
span.protected-readwrite {
	background-color: gray;
	color: black;
}
span.protected-readwrite:hover {
	background-color: gray;
	color:black;
}
/* when we are in read only mode w.r.t. editing protections, e.g. protect tab */
span.protected-readonly {
	background-color: black;
	color: black;
}
span.protected-readonly:hover {
	background-color: gray;
	/* http://www.w3.org/TR/CSS21/ui.html#propdef-cursor */
	/* Draw more "fun" cursor overrides to use, if avail? */
	cursor: default;
}
span.suggested-protection {
	background-color: #FFA500; /* Orange */
	cursor: default;
}
span.suggested-protection:hover {
	background-color: #FF4500; /* OrangeRed */
	cursor: default;
}


/* Classes specific to read.html */

.protected {
	background-color: black;
	color: black;
}
.verified {
	background-color: yellow;
}
.revealed {
	background-color: #90EE90; /* Lightgreen */
}
